    ssti (server-side template injection)
=injecting code to the templates
CODE
{7x7}


    path traversel 
default path of linux= var/www/html
filename=../../../../    etc/passwd
bypassing = ....//....//....//....//


    file upload
=uploading virus files to a file upload funcanality 
and exicuting in the file inside a server

  protection 
black list and white list
white list=allowing only some selected files
black list=blocking selected files

python -m http.server
sudo ufw (port)


    Extensible Markup Language (xml)
used to store or process data
injection in to xml 
entity= extenal entity , internal entity

                              
<!docktype test<!entity hello    
SYSTEM file:///etc/paswd

calling & hello;


    sensitive data exposure (info discloshure)
sensitive data exposing by mistake


mrowid=internal erecord number to locate from table


    authentication vulnerability
=failing in verifying users


authentication=verification

enumaration=info garhering
bruteforce=attack


   acess control vulnerability

with out authentication 
giving acess to 

admin \>>> pro user >>> normal user >>> guest user
       \

/robote.txt it is used the end og url to find admin page path and etc

  ssrf (server side requesr forgery)
>server side attack with changing parameters 
>the parameter must communicate with another server 
>using a server to attack another/same server

  cros (cross-origin resources sharing)
>it is a funcanality used to share files
>allowing random domains 


  business logical vulnerability

eg:-price tampering 


   clickjacking
<iframe src="https://facebook.com/delete_account">


  graphql api vulnerability
>graphquerey language
>api= used to establish faster communication betweeen clint and server
>normal available apis catagraisec as REST 

REST request = sending request one by one 
graphql = sending requests at ones  
end point = www.example.com/graphql


   session mgmt
>session fixaction = able to change token
>session  is not terminating after logout (back button clicking)
>password reset 
>password change

  token based vulnerability 
>reusable token
>old token can be used after getting a new token


  api vuln
>api documentation it contain all ifo about api
>api main vulneraility is info disuclosher

  web llm(large lang model)


  js
>



 spf record spoofing 
>@gmail.com 
>spf is used to send mails to the real reciver 


   wordpress
>content mgmt system(cms)


httpd://test.com/wp/v2/user/1
wp-admin (bruteforce)
xmlrpc.php it is a debug file to used to check all features it only accepts post request 
we can change the requst post and manupulate requst to get user info
public exploit >
wpscan tool used to scan wordpress  

